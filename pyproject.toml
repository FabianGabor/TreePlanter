# Ruff configuration file
# https://docs.astral.sh/ruff/configuration/

[tool.ruff]
# Standard line length for Python projects
line-length = 88
indent-width = 4

# Assume Python 3.13
target-version = "py313"

# Enable specific rule sets
lint.select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "D",      # pydocstyle
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "A",      # flake8-builtins
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
    "PIE",    # flake8-pie
    "RET",    # flake8-return
    "PL",     # pylint
    "RUF",    # ruff-specific rules
    "FURB",   # refurb
    "PERF",   # perflint
    "LOG",    # flake8-logging
]

# Ignore specific rules
lint.ignore = [
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D107",   # Missing docstring in __init__
    "PLR0913", # Too many arguments in function definition
    "PLR0912", # Too many branches
    "PLR0915", # Too many statements
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
    "RUF002", # Docstring contains ambiguous unicode character
    "RUF003", # Comment contains ambiguous unicode character
]

# Allow fix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "static",
    "templates",
]

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces, rather than tabs
indent-style = "space"

# Respect magic trailing commas
skip-magic-trailing-comma = false

# Automatically detect the appropriate line ending
line-ending = "auto"

# Enable preview features for latest formatting
preview = true

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/*.py" = [
    "PLR2004",  # Magic value used in comparison
    "S101",     # Use of assert
    "TID252",   # Relative imports from parent modules
]

# Flask app specific ignores
"app.py" = [
    "PLR0904",  # Too many public methods (Flask app)
    "C901",     # Too complex
]

[tool.ruff.lint.isort]
# Use a single line between direct and from import
split-on-trailing-comma = true
# Force imports to be sorted within their section
force-sort-within-sections = true
