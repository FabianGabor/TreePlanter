{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start Flask App",
            "type": "shell",
            "command": "flask",
            "args": [
                "run",
                "--host=0.0.0.0",
                "--port=5000"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "problemMatcher": [],
            "options": {
                "env": {
                    "FLASK_APP": "app.py",
                    "FLASK_ENV": "development",
                    "FLASK_DEBUG": "1"
                }
            },
            "isBackground": true
        },
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "pip",
            "args": [
                "install",
                "-r",
                "requirements.txt"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Tests",
            "type": "shell",
            "command": "pytest",
            "args": [
                "-v"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Lint Code (Flake8)",
            "type": "shell",
            "command": "flake8",
            "args": [
                ".",
                "--max-line-length=88",
                "--extend-ignore=E203,W503"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                "$python"
            ]
        },
        {
            "label": "Lint Code (Ruff)",
            "type": "shell",
            "command": "ruff",
            "args": [
                "check",
                ".",
                "--output-format=text"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                {
                    "owner": "ruff",
                    "fileLocation": "absolute",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+):(\\d+):\\s+(\\w+)\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "column": 3,
                            "severity": 4,
                            "message": 5
                        }
                    ]
                }
            ]
        },
        {
            "label": "Lint Code (Pylint)",
            "type": "shell",
            "command": "pylint",
            "args": [
                "app.py"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                {
                    "owner": "pylint",
                    "fileLocation": "absolute",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+):(\\d+):\\s+(\\w+):\\s+(.+)\\s+\\((.+)\\)$",
                            "file": 1,
                            "line": 2,
                            "column": 3,
                            "severity": 4,
                            "message": 5,
                            "code": 6
                        }
                    ]
                }
            ]
        },
        {
            "label": "Format Code (Ruff)",
            "type": "shell",
            "command": "ruff",
            "args": [
                "format",
                "."
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Fix Code (Ruff)",
            "type": "shell",
            "command": "ruff",
            "args": [
                "check",
                ".",
                "--fix"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Check All (Ruff + Pylint)",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "echo 'üîç Running Ruff check...' && ruff check . && echo 'üîç Running Pylint...' && pylint app.py && echo '‚úÖ All checks passed!'"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Check Tool Versions",
            "type": "shell",
            "command": "./version_check.sh",
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Install Pre-commit Hooks",
            "type": "shell",
            "command": "pre-commit",
            "args": [
                "install"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Pre-commit on All Files",
            "type": "shell",
            "command": "pre-commit",
            "args": [
                "run",
                "--all-files"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Check Pre-commit Status",
            "type": "shell",
            "command": "./precommit_check.sh",
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Quick Start",
            "type": "shell",
            "command": "./start.sh",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "problemMatcher": [],
            "isBackground": true
        }
    ]
}
